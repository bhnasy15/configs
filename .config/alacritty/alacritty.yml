env:
  TERM: alacritty

window:
  dimensions:
    columns: 60
    lines: 40

  #position:
  #  x: 0
  #  y: 0

  #padding:
  #  x: 0
  #  y: 0

  #dynamic_padding: false

  decorations: none

  opacity: 0.8

  #startup_mode: Windowed

  #dynamic_title: true

  #gtk_theme_variant: dark

scrolling:
  history: 1000

  # Scrolling distance multiplier.
  #multiplier: 3

# Font configuration
font:
  size: 13.0
  normal:
    family: monospace

  #bold:
    #family: monospace

  #italic:
    #family: monospace

  #bold_italic:
    #family: monospace

  #offset:
  #  x: 0
  #  y: 0

  #glyph_offset:
  #  x: 0
  #  y: 0

# If `true`, bold text is drawn using the bright color variants.
#draw_bold_text_with_bright_colors: false

colors:
  primary:
    background: '#202829'
    foreground: '#FFFFFF'

  # Normal colors
  normal:
    black:   '#000000'
    red:     '#FF1744'
    green:   '#00C853'
    yellow:  '#FFEA00'
    blue:    '#00B0FF'
    magenta: '#AA00FF'
    cyan:    '#18FFFF'
    white:   '#e5e1d8'


#selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

#cursor:
  # Cursor style
  #style:
    # Cursor shape
    #
    # Values for `shape`:
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    #shape: Block

  # Cursor blinking interval in milliseconds.
  #blink_interval: 750

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g.
# `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
# shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#working_directory: None


# Regex hints
#
# Terminal hints can be used to find text in the visible part of the terminal
# and pipe it to other applications.
hints:
  # Keys used for the hint labels.
  alphabet: "jfkdls;ahgurieowpq"

  # List with all available hints
  #
  # Each hint must have a `regex` and either an `action` or a `command` field.
  # The fields `mouse`, `binding` and `post_processing` are optional.
  #
  # The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
  # `mouse.mods` accept the same values as they do in the `key_bindings` section.
  #
  # The `mouse.enabled` field controls if the hint should be underlined while
  # the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
  #
  # If the `post_processing` field is set to `true`, heuristics will be used to
  # shorten the match if there are characters likely not to be part of the hint
  # (e.g. a trailing `.`). This is most useful for URIs.
  #
  # Values for `action`:
  #   - Copy
  #       Copy the hint's text to the clipboard.
  #   - Paste
  #       Paste the hint's text to the terminal or search.
  #   - Select
  #       Select the hint's text.
  #   - MoveViModeCursor
  #       Move the vi mode cursor to the beginning of the hint.
  enabled:
   - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
             [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
     action: Copy
  #   command: xdg-open
  #   post_processing: true
  #   mouse:
  #     enabled: true
  #     mods: None
     binding:
       key: G
       mods: Control|Shift

#mouse_bindings:
#  - { mouse: Right,                 action: ExpandSelection }
#  - { mouse: Right,  mods: Control, action: ExpandSelection }
#  - { mouse: Middle, mode: ~Vi,     action: PasteSelection  }

key_bindings:
   - { key: V,         mods: Alt | Shift,                        action: Paste          }
   - { key: C,         mods: Alt | Shift,                        action: Copy           }
   - { key: K,         mods: Control,   mode: ~Alt|~vi,      action: ScrollLineUp  }
   - { key: J,         mods: Control,   mode: ~Alt|~vi,      action: ScrollLineDown }
   - { key: K,         mods: Control | Shift,   mode: ~Alt|~vi,      action: ScrollHalfPageUp  }
   - { key: J,         mods: Control | Shift,   mode: ~Alt|~vi,      action: ScrollHalfPageDown }
   - { key: Plus,    mods: Control | Shift,                    action: IncreaseFontSize }
   - { key: Minus,     mods: Control,                         action: DecreaseFontSize }
   - { key: Equals,    mods: Control,                    action: ResetFontSize    }

